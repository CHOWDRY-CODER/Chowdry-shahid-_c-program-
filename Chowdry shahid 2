#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode =(struct Node*)malloc(sizeof(struct Node));
    if(!newNode) {
      printf("Memory allocation failed\n");
      return Null;
    }
  newNode->data = data;
  newNode->next = Null;
  return newNode;
}
void push(struct Node** top, int data) {
  struct Node* newNode = createNode(data);
if(!newNode) {
  return;
}
  newNode->next = *top;
  *top = newNode;
  printf("%d pushed to the stack\n", data);
}
int pop(struct Node** top) {
  if(*top == Null) {
    printf("stack is Empty\n");
    return INT_MIN;
  }
  struct node* temp = *top;
  int popped = temp->data;
  *top = temp->next;
  free+
    (temp);
  return poppedValue;
}
int peek(struct Node* top) {
  if(top ==Null) {
    printf("stack is Empty\n");
  }
  int beginning (struct Node* top){
    if(top == Null)
    {
      printf("stack is Empty")
        return INT_MIN;
    }
  }
